■ 텐서플로 : 딥러닝 전용 파이썬 라이브러리 (무료)

텐서플로는 데이터플로우그래프를 기반으로 한다.
데이터플로우그래프 : 엣지 + 노드
엣지 : 텐서 (텐서플로에서 사용되는 여러가지 데이터형을 통틀어 이름)
노드 : 연산자
즉, 데이터플로우그래프 = 그냥 텐서플로를 사용하여 작성한 소스코드



■ 텐서플로의 동작

텐서플로를 사용하게 되면 다른 언어로 구성한 코드와 조금 다른점을 느낄 수 있다.
바로 이것
텐서플로는 두 가지 단계(구조)로 구성이 되어 동작된다. (이게 다른점 두 가지 단계로 나뉘는 것)
1. 구성 단계(Construction Phase)
머신러닝 모델을 만든다.
2. 실행 단계(Execution Phase)
그 모델을 동작시킨다. (학습도 포함됨 여기에)

텐서플로로 작성된 코드가 실행이 되면 역행 연산을 한다.
그래프의 처음으로 거슬러 올라가 거기서부터 계산을 하게 됨

텐서플로로 작성된 코드는 python단에서 연산이 되는 것이 아닌
Session에 실려 Device 단에서 C로 연산이 된다. (굉장히 빠름)



■ 텐서플로의 기본 개념 및 용어

오퍼레이션(OP) : 연산을 말함
텐서(Tensor) : 텐서플로에서 사용되는 데이터형 데이터를 담는 통이라고 생각하면 됨
세션(Session) : 실행 환경 (텐서플로로 작성된 코드를 C로 이식시키기 위한 파일이라고 생각하면 됨)



■ 텐서

rank : 텐서의 꺽새의 개수
shape : 뒤에서부터 괄호 안 차원의 개수를 매김
axis : 축을 나타낸다. 보통 함수에 많이 사용됨 (맨안쪽의값부터 큰값을 가지고 바깥쪽으로 나올수록 작은값을 가지게 된다.) (0으로 가장 작은값이 끝나고 -1로 제일 안쪽 축을 표현할 수도 있다.)

Scalar : 일반 그냥 숫자
Vector : 1차원 행렬 ([1,2,3])
Matrix : 2차원 행렬 ([[1],[2],[3]])
Cube : 3차원 행렬 ([[[1],[2]][[3],[4]]])
N-Tensor : 4차원 이상의 행렬들



■ 텐서플로의 자료형

Variable : 일반적인 변수(계속 변경되는 w와 bias를 저장하는데 주로 사용됨)
Constant : 일반적인 상수
Placeholder : 임시 저장을 위한 변수(데이터셋에 주로 사용됨)
* Placeholder는 변수임에도 불구하고 값을 선언해주지 않는다. 나중에 Session 안에서 feeding을 통해 데이터셋을
Placeholder에 집어넣어준다. (feed_dict를 사용해서 넣는다.)
* feed_dict는 리스트 요소를 하나씩 꺼내쓰는 것이 아닌 한번에 통채로 꺼내다 쓴다.



■ Broadcasting

텐서플로에서 제공하는 아주 유용한 기능이다.
행렬의 연산(덧셈,곱셈 등)에서 차원이 서로 맞지 않아 계산이 힘들 때
행렬을 자동으로 늘려줘(Stratch) 차원을 맞춰 계산이 될 수 있도록 도와준다.
(차원을 줄이는 것은 불가능하다.)





















